(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{313:function(t,a,v){"use strict";v.r(a);var e=v(10),_=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("summary",[a("b",[t._v("2022-10-08 星期六")])]),t._v(" "),a("blockquote",[a("p",[t._v("你从自己的一次失败中学到的东西，比阅读一千个成功故事学到的更多。")])]),t._v(" "),a("p",{staticStyle:{color:"blue"}},[t._v("1. transform与transition属性都有哪些 【CSS】")]),t._v(" "),a("details",[a("summary",[a("b",[t._v("参考答案")])]),t._v(" "),a("p"),a("p",[a("strong",[t._v("transform")])]),t._v(" "),a("p",[t._v("transform 允许缩放、旋转、平移、倾斜等。")]),t._v(" "),a("ul",[a("li",[t._v("matrix(a1,a2,a3,a4,a5,a6) 定义 2D 转换")]),t._v(" "),a("li",[t._v("translate(x,y) x 轴与 y 轴的 2D 平移转换")]),t._v(" "),a("li",[t._v("scale(x,y) x 轴与 y 轴缩放的 2D 转换")]),t._v(" "),a("li",[t._v("rotate(angle) x 轴与 y 轴 2D 旋转角度 转换")]),t._v(" "),a("li",[t._v("skew(x-angle,y-angle) x 轴与 y 轴的 2D 倾斜转换")])]),t._v(" "),a("p",[a("strong",[t._v("transition")])]),t._v(" "),a("ul",[a("li",[t._v("transition 属性是 "),a("code",[t._v("transition-property")]),t._v("、"),a("code",[t._v("transition-duration")]),t._v("、"),a("code",[t._v("transition-timing-function")]),t._v("、"),a("code",[t._v("transition-delay")]),t._v("四个属性的简写属性。")])]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("transition-property")]),t._v(":用来设置元素中参与过渡的属性名称 ,语法格式："),a("code",[t._v("transition-property:none | all | property")])]),t._v(" "),a("ul",[a("li",[t._v("none:没有属性参与过渡")]),t._v(" "),a("li",[t._v("all:所有属性参与过渡")]),t._v(" "),a("li",[t._v("property:CSS 属性过渡列表，多个属性使用逗号分隔")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("transition-duration")]),t._v(":用来设置过渡需要花费的时间 语法格式:"),a("code",[t._v("transition-duration:time")]),a("br"),t._v("\n多个属性之间可用逗号进行分割:"),a("code",[t._v("transition-duration:1s,2s,3s;")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("transition-timing-function")]),t._v(":用来设置过渡动画的类型")])])]),t._v(" "),a("ul",[a("li",[t._v("linear:匀速")]),t._v(" "),a("li",[t._v("ease:慢到快再到慢")]),t._v(" "),a("li",[t._v("ease-in:慢速开始过渡")]),t._v(" "),a("li",[t._v("ease-out:慢速结束过渡")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("code",[t._v("transition-delay")]),t._v(": 设置过渡效果何时开始，即等待的时间")])]),t._v(" "),a("p")]),t._v(" "),a("hr"),t._v(" "),a("p",{staticStyle:{color:"blue"}},[t._v("2. animation的属性 【CSS】")]),t._v(" "),a("details",[a("summary",[a("b",[t._v("参考答案")])]),t._v(" "),a("p",[a("ol",[a("li",[a("code",[t._v("@keyframes")]),t._v("规则")])])]),a("div",{staticClass:"language-CSS extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" animationName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("percentage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("animationName")]),t._v(":动画名称")]),t._v(" "),a("li",[a("code",[t._v("from")]),t._v(":定义动画的开头 0%")]),t._v(" "),a("li",[a("code",[t._v("percentage")]),t._v(":动画各个阶段，为百分比值，可添加多个")]),t._v(" "),a("li",[a("code",[t._v("to")]),t._v(":动画结尾，100%")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("动画应用\n通过"),a("code",[t._v("1")]),t._v("创建好动画后，需要将动画应用指定到HTML元素，CSS提供的动画属性有：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("animation-name")]),t._v(":设置需要绑定到元素的动画名称")]),t._v(" "),a("li",[a("code",[t._v("animation-duration")]),t._v(":动画开始到完成所花费的时间")]),t._v(" "),a("li",[a("code",[t._v("animation-timing-function")]),t._v(":动画速度曲线，默认为ease")]),t._v(" "),a("li",[a("code",[t._v("animation-fill-mode")]),t._v(":设置当前动画不播放时的状态(forwards为最后一个关键帧样式，backwards为第一个关键中样式，both为两者)")]),t._v(" "),a("li",[a("code",[t._v("animation-delay")]),t._v(":动画开始执行的延迟时间")]),t._v(" "),a("li",[a("code",[t._v("animation-iteration-count")]),t._v(":设置动画的播放次数,infinite表示无限次播放，默认值为1")]),t._v(" "),a("li",[a("code",[t._v("animation-play-state")]),t._v(":设置动画是正在运行还是暂停，默认是running")]),t._v(" "),a("li",[a("code",[t._v("animation")]),t._v(":动画的所有属性")])]),t._v(" "),a("p")]),t._v(" "),a("hr"),t._v(" "),a("p",{staticStyle:{color:"blue"}},[t._v("3. 什么是原生ESM? 【JS】 ")]),t._v(" "),a("details",[a("summary",[a("b",[t._v("参考答案")])]),t._v(" "),a("p",[a("ul",[a("li",[t._v("JavaScript模块,即提供一种将 JavaScript 程序拆分为可按需导入的单独模块的机制")]),t._v(" "),a("li",[t._v("最新的浏览器开始原生支持模块功能了-- 这会是一个好事情 — 浏览器能够最优化加载模块，使它比使用库更有效率：使用库通常需要做额外的客户端处理。")]),t._v(" "),a("li",[t._v("关键词:"),a("code",[t._v("import")]),t._v(" "),a("code",[t._v("export")])]),t._v(" "),a("li",[t._v("根据"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN JS ESM"),a("OutboundLink")],1),t._v("体验。")])])])]),t._v(" "),a("hr"),t._v(" "),a("p",{staticStyle:{color:"blue"}},[t._v("4. Vite的解决思路是基于什么？ ")]),t._v(" "),a("details",[a("summary",[a("b",[t._v("参考答案")])]),t._v(" "),a("p",[a("ul",[a("li",[t._v("Vite是基于"),a("code",[t._v("浏览器开始原生支持ES模块，且越来越多的JS工具使用编译性语言编写")])]),t._v(" "),a("li",[t._v("Vite针对缓慢的服务器启动，解决思路是："),a("code",[t._v("基于打包器方式的启动是必须优先抓取并构建整个应用，然后才能提供服务，而Vite是在一开始将应用中的模块分为依赖和源码两项，改进开发服务器启动慢的问题")]),t._v(" "),a("ul",[a("li",[t._v("依赖使用esbuild预构建依赖。")]),t._v(" "),a("li",[t._v("源码以原生ESM方式提供(浏览器接管了打包程序的部分工作)。")]),t._v(" "),a("li",[t._v("在 Vite 中，HMR 是在原生 ESM 上执行的。")])])])])])]),t._v(" "),a("hr"),t._v(" "),a("p",{staticStyle:{color:"blue"}},[t._v("5. Webpack的tree-shaking是什么，需要注意哪些问题，如何配置? ")]),t._v(" "),a("details",[a("summary",[a("b",[t._v("参考答案")])]),t._v(" "),a("p",[a("ul",[a("li",[t._v("一个js文件中有a和b两个方法，只用到了a方法，b方法没有用到，tree-shaking就是解决打包的时候不去打包没用到的b方法。")]),t._v(" "),a("li",[t._v("Tree-shaking只支持ES Module(import,export),不支持require")]),t._v(" "),a("li",[t._v("生产环境Tree-shaking默认配置好了，不需要对optimization配置,但仍需要对package.json中的sideEffects配置。")]),t._v(" "),a("li",[t._v("开发环境默认没有配置tree-shaking，需要在webpack.config.js配置文件中添加"),a("code",[t._v("optimization:{usedExports:true}")]),t._v(",如果引入第三方资源，需要在"),a("code",[t._v("package.json")]),t._v("中配置"),a("code",[t._v("sideEffects:false")])])])])]),t._v(" "),a("comment")],1)}),[],!1,null,null,null);a.default=_.exports}}]);